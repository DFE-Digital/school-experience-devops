{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "environmentName": {
            "type": "string",
            "allowedValues": [
              "dev",
              "staging",
              "prod"
            ],
            "metadata": {
                "description": "Specify either dev, test or prod for configuration values."
            }
        },
        "location": {
            "defaultValue": "uksouth",
            "type": "String",
            "metadata": {
                "description": "The location where resources will be deployed."
            }       
        },
        "servers_db_createMode": {
            "defaultValue": null,
            "type": "SecureString"
        },
        "sites_school_experience_name": {
            "type": "String"
        },
        "redis_name": {
            "type": "String"
        },
        "config_web_name": {
            "defaultValue": "web",
            "type": "String"
        },
        "serverfarms_serviceplan_name": {
            "defaultValue": "schoolExperienceServicePlan",
            "type": "String"
        },
        "servers_db_name": {
            "defaultValue": "schoolexperience-dev-db",
            "type": "String"
        },
        "registry_name": {
            "defaultValue": "schoolExperienceRegistry",
            "type": "String"
        },
        "databases_postgres_name": {
            "defaultValue": "postgres",
            "type": "String"
        },
        "databases_azure_sys_name": {
            "defaultValue": "azure_sys",
            "type": "String"
        },
        "databases_azure_maintenance_name": {
            "defaultValue": "azure_maintenance",
            "type": "String"
        },
        "databases_school_experience_name": {
            "defaultValue": "school_experience_test",
            "type": "String"
        },
        "firewallRules_AllowAzureResourceIps_name": {
            "defaultValue": "AllowAzureResourceIps",
            "type": "String"
        },
        "postgresAdminLoginName": {
            "defaultValue": "adminuser",
            "type": "String"
        },
        "postgresUserLoginName": {
            "defaultValue": "railsappuser",
            "type": "String"
        },
        "dockerComposeFile": {
            "defaultValue": null,
            "type": "String"
        },
        "redis_database_index": {
            "defaultValue": "15",
            "type": "String"
        },
        "vaultName": {
            "type": "string",
            "defaultValue": "schoolExperienceVault",
            "metadata": {
                "description": "The name of the keyvault that contains the secret."
            }
        },
        "vaultResourceGroupName": {
            "type": "string",
            "defaultValue": "schoolExperienceVaultGroup",
            "metadata": {
                "description": "The name of the resource group that contains the keyvault."
            }
        },
        "vaultSubscription": {
            "type": "string",
            "defaultValue": "[subscription().subscriptionId]",
            "metadata": {
                "description": "The name of the subscription that contains the keyvault."
            }
        },
        "_artifactsLocation": {
            "type": "string",
            "metadata": {
                "description": "The base URI where artifacts required by this template are located. When the template is deployed using the accompanying scripts, a private location in the subscription will be used and this value will be automatically generated."
            },
            "defaultValue": "https://raw.githubusercontent.com/DFE-Digital/school-experience-devops/master/"
        },
        "_artifactsLocationSasToken": {
            "type": "securestring",
            "metadata": {
                "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated."
            },
            "defaultValue": ""
        },
        "registrySku": {
            "type": "object",
            "defaultValue": {
                "name": "Standard",
                "tier": "Standard"
            }
        },
        "postgresSku": {
            "type": "object",
            "defaultValue": {
                "name": "B_Gen5_2",
                "tier": "Basic",
                "family": "Gen5",
                "capacity": 2
            }
        },
        "redisSku": {
            "type": "object",
            "defaultValue": {
                "name": "Basic",
                "family": "C",
                "capacity": 0
            }
        },
        "webAppSku": {
            "type": "object",
            "defaultValue": {
                "name": "B1",
                "tier": "Basic",
                "size": "B1",
                "family": "B",
                "capacity": 1
            }
        }
    },
    "variables": {
        "dockerRegistryUrl": "[concat('https://',toLower(parameters('registry_name')), '.azurecr.io')]",
        "environmentSettings": {
            "dev": {
                "railsEnv": "servertest",
                "slackEnv": ""
            },
            "staging": {
                "railsEnv": "production",
                "slackEnv": "staging",
                "ipSecurityRestrictions": null
            },
            "prod": {
                "railsEnv": "production",
                "slackEnv": "production",
                "ipSecurityRestrictions": null
            }
        }
    },
    "resources": [
        {
            "apiVersion": "2018-05-01",
            "name": "postgresdb",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "contentVersion": "1.0.0.0",
                    "uri": "[uri(parameters('_artifactsLocation'), concat('./nested/postgres.json', parameters('_artifactsLocationSasToken')))]"
                },
                "parameters": {
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "servers_db_createMode": {
                        "value": "[parameters('servers_db_createMode')]"
                    },
                    "servers_db_name": {
                        "value": "[parameters('servers_db_name')]"
                    },
                    "databases_postgres_name": {
                        "value": "[parameters('databases_postgres_name')]"
                    },
                    "databases_azure_sys_name": {
                        "value": "[parameters('databases_azure_sys_name')]"
                    },
                    "databases_azure_maintenance_name": {
                        "value": "[parameters('databases_azure_maintenance_name')]"
                    },
                    "databases_school_experience_name": {
                        "value": "[parameters('databases_school_experience_name')]"
                    },
                    "firewallRules_AllowAzureResourceIps_name": {
                        "value": "[parameters('firewallRules_AllowAzureResourceIps_name')]"
                    },
                    "postgresAdminLoginName": {
                        "value": "[parameters('postgresAdminLoginName')]"
                    },
                    "postgresAdminPassword": {
                        "reference": {
                            "keyVault": {
                                "id": "[resourceId(parameters('vaultSubscription'), parameters('vaultResourceGroupName'), 'Microsoft.KeyVault/vaults', parameters('vaultName'))]"
                            },
                            "secretName": "postgresAdminPassword"
                        }
                    },
                    "sku": {
                        "value": "[parameters('postgresSku')]"
                    }
                }
            }
        },
        {
            "apiVersion": "2018-05-01",
            "name": "website",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "contentVersion": "1.0.0.0",
                    "uri": "[uri(parameters('_artifactsLocation'), concat('./nested/website.json', parameters('_artifactsLocationSasToken')))]"
                },
                "parameters": {
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "sites_school_experience_name": {
                        "value": "[parameters('sites_school_experience_name')]"
                    },
                    "config_web_name": {
                        "value": "[parameters('config_web_name')]"
                    },
                    "servers_db_name": {
                        "value": "[parameters('servers_db_name')]"
                    },
                    "databases_school_experience_name": {
                        "value": "[parameters('databases_school_experience_name')]"
                    },
                    "postgresUserLoginName": {
                        "value": "[parameters('postgresUserLoginName')]"
                    },
                    "dockerComposeFile": {
                        "value": "[parameters('dockerComposeFile')]"
                    },
                    "redis_database_index": {
                        "value": "[parameters('redis_database_index')]"
                    },
                    "registry_name": {
                        "value": "[parameters('registry_name')]"
                    },
                    "serverfarms_serviceplan_name": {
                        "value": "[parameters('serverfarms_serviceplan_name')]"
                    },
                    "redis_name": {
                        "value": "[parameters('redis_name')]"
                    },
                    "postgresUserPassword": {
                        "reference": {
                            "keyVault": {
                                "id": "[resourceId(parameters('vaultSubscription'), parameters('vaultResourceGroupName'), 'Microsoft.KeyVault/vaults', parameters('vaultName'))]"
                            },
                            "secretName": "postgresUserPassword"
                        }
                    },
                    "railsEnv": {
                        "value": "[variables('environmentSettings')[parameters('environmentName')].railsEnv]"
                    },
                    "slackEnv": {
                        "value": "[variables('environmentSettings')[parameters('environmentName')].slackEnv]"
                    },
                    "slackWebhook": {
                        "reference": {
                            "keyVault": {
                                "id": "[resourceId(parameters('vaultSubscription'), parameters('vaultResourceGroupName'), 'Microsoft.KeyVault/vaults', parameters('vaultName'))]"
                            },
                            "secretName": "slackWebhook"
                        }
                    },
                    "sku": {
                        "value": "[parameters('webAppSku')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Cache/Redis",
            "name": "[parameters('redis_name')]",
            "apiVersion": "2017-10-01",
            "location": "[parameters('location')]",
            "tags": {},
            "scale": null,
            "properties": {
                "sku": "[parameters('redisSku')]",
                "enableNonSslPort": false,
                "redisConfiguration": {
                    "maxclients": "256",
                    "maxmemory-reserved": "0",
                    "maxfragmentationmemory-reserved": "0",
                    "maxmemory-policy": "volatile-lru",
                    "maxmemory-delta": "0"
                }
            },
            "dependsOn": []
        },
        {
            "type": "Microsoft.ContainerRegistry/registries",
            "sku": "[parameters('registrySku')]",
            "name": "[parameters('registry_name')]",
            "apiVersion": "2017-10-01",
            "location": "[parameters('location')]",
            "tags": {},
            "scale": null,
            "properties": {
                "adminUserEnabled": true
            },
            "dependsOn": []
        }
    ]
}
