{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "sites_school_experience_name": {
            "type": "String"
        },
        "config_web_name": {
            "type": "String"
        },
        "postgresUserPassword": {
            "type": "securestring"
        },
        "dockerComposeFile": {
            "type": "String"
        },
        "appSettings": {
            "type": "array"
        },
        "serverfarms_serviceplan_name": {
            "type": "String"
        },
        "slackWebhook": {
            "type": "securestring"
        },
        "sku": {
            "type": "object"
        },
        "ipAddressRestriction": {
            "type": "String"
        },
        "subnetMaskRestriction": {
            "type": "String"
        },
        "environmentName": {
            "type": "String"
        },
        "hostNameBindingsName": {
            "type": "String"
        },
        "sentryDsn": {
            "type": "securestring"
        },
        "logsDirectorySizeLimit": {
             "type": "string"
        },
        "public_host_name": {
             "type": "string"
        },
        "dfeSigninSecret": {
             "type": "securestring"
        },
        "customDomainsWithCerts": {
            "type": "array",
            "defaultValue": []
        },
        "redisUrl": {
            "type": "securestring"
        },
        "appInsightsInstrumentationKey": {
            "type": "securestring"
        },
        "existingKeyVaultId": {
            "type": "string"
        },
        "_artifactsLocationSasToken": {
            "type": "securestring"
        },
        "_artifactsLocation": {
            "type": "string"
        },
        "applyServicePlan": {
            "type": "bool"
        },
        "crmClientSecret": {
             "type": "securestring"
        },
        "backendResourceGroup": {
             "type": "string"
        },
        "webTestFrequencySecs": {
             "type": "string"
        },
        "webTestTimeoutSecs": {
             "type": "string"
        },
        "webTestUrl": {
             "type": "string"
        },      
        "webTestExpected": {
             "type": "string"
        },
        "webTestLocations": {
             "type": "array"
        },
        "webTestEnabled": {
             "type": "bool"
        },
        "appInsightsName": {
             "type": "string"
        },
        "slackEnv": {
             "type": "string"
        }
    },
    "variables": {
        "ipSecurityRestriction": {
            "ipAddress": "[parameters('ipAddressRestriction')]",
            "name": "denyaccess",
            "description": "Deny Access",
            "action": "Deny"
        },
        "emptyArray": [],
        "webTestName": "[concat(parameters('sites_school_experience_name'),'-webtest')]",
        "secureAppSettings": [
            {   
                "name": "REDIS_URL",
                "value": "[parameters('redisUrl')]"
            },  
            {   
                "name": "DB_PASSWORD",
                "value": "[parameters('postgresUserPassword')]"
            },  
            {   
                "name": "SLACK_WEBHOOK",
                "value": "[if(equals(parameters('slackEnv'),''), '', parameters('slackWebhook'))]"
            },  
            {   
                "name": "SENTRY_DSN",
                "value": "[parameters('sentryDsn')]"
            },  
            {   
                "name": "DFE_SIGNIN_SECRET",
                "value": "[parameters('dfeSigninSecret')]"
            },  
            {   
                "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
                "value":  "[parameters('appInsightsInstrumentationKey')]"
            },  
            {   
                "name": "CRM_CLIENT_SECRET",
                "value": "[parameters('crmClientSecret')]"
            }
        ]
    },
    "resources": [
        {
            "type": "Microsoft.Web/sites",
            "kind": "app,linux,container",
            "name": "[parameters('sites_school_experience_name')]",
            "apiVersion": "2016-08-01",
            "location": "[resourceGroup().location]",
            "scale": null,
            "properties": {
                "enabled": true,
                "hostNameSslStates": [
                    {
                        "name": "[concat(parameters('sites_school_experience_name'),'.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "virtualIP": null,
                        "thumbprint": null,
                        "toUpdate": null,
                        "hostType": "Standard"
                    },
                    {
                        "name": "[concat(parameters('sites_school_experience_name'),'.scm.azurewebsites.net')]",
                        "sslState": "Disabled",
                        "virtualIP": null,
                        "thumbprint": null,
                        "toUpdate": null,
                        "hostType": "Repository"
                    }
                ],
                "serverFarmId": "[resourceId(parameters('backendResourceGroup'),'Microsoft.Web/serverfarms', parameters('serverfarms_serviceplan_name'))]",
                "reserved": true,
                "siteConfig": {
                    "linuxFxVersion": "[concat('COMPOSE|', base64(parameters('dockerComposeFile')))]",
                    "alwaysOn": true,
                    "appSettings": "[concat(parameters('appSettings'), variables('secureAppSettings'))]"
                },
                "scmSiteAlsoStopped": false,
                "hostingEnvironmentProfile": null,
                "clientAffinityEnabled": false,
                "clientCertEnabled": false,
                "hostNamesDisabled": false,
                "containerSize": 0,
                "dailyMemoryTimeQuota": 0,
                "cloningInfo": null,
                "httpsOnly": true
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('serverfarms_serviceplan_name'))]"
            ]
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "sku": "[parameters('sku')]",
            "kind": "linux",
            "name": "[parameters('serverfarms_serviceplan_name')]",
            "apiVersion": "2016-09-01",
            "condition": "[parameters('applyServicePlan')]",
            "location": "[resourceGroup().location]",
            "scale": null,
            "properties": {
                "name": "[parameters('serverfarms_serviceplan_name')]",
                "workerTierName": null,
                "adminSiteName": null,
                "hostingEnvironmentProfile": null,
                "perSiteScaling": false,
                "reserved": true,
                "targetWorkerCount": 0,
                "targetWorkerSizeId": 0
            },
            "dependsOn": []
        },
        {
            "type": "Microsoft.Web/sites/config",
            "name": "[concat(parameters('sites_school_experience_name'), '/', parameters('config_web_name'))]",
            "apiVersion": "2018-02-01",
            "location": "[resourceGroup().location]",
            "scale": null,
            "properties": {
                "requestTracingEnabled": false,
                "httpLoggingEnabled": false,
                "logsDirectorySizeLimit": "[parameters('logsDirectorySizeLimit')]",
                "detailedErrorLoggingEnabled": false,
                "webSocketsEnabled": false,
                "alwaysOn": true,
                "managedPipelineMode": "Integrated",
                "minTlsVersion": "1.2",
                "ftpsState": "Disabled",
                "ipSecurityRestrictions": "[if(equals(parameters('environmentName'), 'dev'),  array(variables('ipSecurityRestriction')), variables('emptyArray'))]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_school_experience_name'))]"
            ]
        },
        {
            "apiVersion": "2018-05-01",
            "name": "customdomain",
            "condition": "[greater(length(parameters('customDomainsWithCerts')),0)]",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "contentVersion": "1.0.0.0",
                    "uri": "[uri(parameters('_artifactsLocation'), concat('./nested/customdomain.json', parameters('_artifactsLocationSasToken')))]"
                },
                "parameters": {
                   "customDomainsWithCerts": {
                        "value": "[parameters('customDomainsWithCerts')]"
                    },
                    "existingKeyVaultId": {
                        "value": "[parameters('existingKeyVaultId')]"
                    },
                    "sites_school_experience_name": {
                        "value": "[parameters('sites_school_experience_name')]"
                   },
                    "serverfarms_serviceplan_name": {
                        "value": "[parameters('serverfarms_serviceplan_name')]"
                    }
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('sites_school_experience_name'))]"
            ]
        },
        {
            "name": "[variables('webTestName')]",
            "apiVersion": "2015-05-01",
            "type": "microsoft.insights/webtests",
            "location": "[resourceGroup().location]",
            "tags": {
               "[concat('hidden-link:', resourceId('microsoft.insights/components/', parameters('appInsightsName')))]": "Resource"
            },
            "dependsOn": [
               "[resourceId('Microsoft.Web/sites', parameters('sites_school_experience_name'))]"
            ],
            "properties": {
               "Name": "[variables('webTestName')]",
               "Enabled": "[parameters('webTestEnabled')]",
               "Frequency": "[parameters('webTestFrequencySecs')]",
               "Timeout": "[parameters('webTestTimeoutSecs')]",
               "Kind": "ping",
               "Locations": "[parameters('webTestLocations')]",
               "Configuration": {
                 "WebTest": "[concat('<WebTest Name=\"', variables('webTestName'), '\"',  ' Enabled=\"True\" CssProjectStructure=\"\" CssIteration=\"\" Timeout=\"',parameters('webTestTimeoutSecs'),'\" WorkItemIds=\"\" xmlns=\"http://microsoft.com/schemas/VisualStudio/TeamTest/2010\" Description=\"\" CredentialUserName=\"\" CredentialPassword=\"\" PreAuthenticate=\"True\" Proxy=\"default\" StopOnError=\"False\" RecordedResultFile=\"\" ResultsLocale=\"\">        <Items>        <Request Method=\"GET\"  Version=\"1.1\" Url=\"', parameters('webTestUrl') ,'\" ThinkTime=\"0\" Timeout=\"',parameters('webTestTimeoutSecs'),'\" ParseDependentRequests=\"True\" FollowRedirects=\"True\" RecordResult=\"True\" Cache=\"False\" ResponseTimeGoal=\"0\" Encoding=\"utf-8\" ExpectedHttpStatusCode=\"', parameters('webTestExpected') ,'\" ExpectedResponseUrl=\"\" ReportingName=\"\" IgnoreHttpStatusCode=\"False\" /></Items></WebTest>')]"
               },
               "SyntheticMonitorId": "[variables('webTestName')]"
            }
        }
    ],
    "outputs": {
        "webAppIps": {
            "type": "array",
            "value": "[split(reference(resourceId('Microsoft.Web/sites', parameters('sites_school_experience_name')),'2016-08-01').outboundIpAddresses, ',')]"
        }
    }
}
